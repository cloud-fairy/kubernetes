apiVersion: cloudfairy.dev/v1
kind: CloudfairyLibraryModule
metadata:
  name: application-to-service
  namespace: cloudfairy
  annotations:
    cloudfairy.dev/is-connector: "true"
spec:
  from:
    - cloudfairy.dev/env-injectable
  to:
    - cloudfairy.dev/with-service
  vendor: cloudfairy
  displayName: Service/Application to Service Connector
  dependecies: []
  interace: []
  validation: []
  output:
    - name: "{{ properties.env_host_name }}"
      value: "{{ dependency.to_module.serviceName }}"
    - name: "{{ properties.env_port_name }}"
      value: "{{ dependency.to_module.servicePort }}"
  properties:
    - name: env_host_name
      displayName: "Evironment variable for Host Name"
      type: string
      defaultValue: "SVC_HOST"
    - name: env_port_name
      displayName: "Evironment variable for Port"
      type: string
      defaultValue: "SVC_PORT"
---
apiVersion: cloudfairy.dev/v1
kind: CloudfairyLibraryModule
metadata:
  name: application-to-user-password
  namespace: cloudfairy
  annotations:
    cloudfairy.dev/is-connector: "true"
spec:
  from:
    - cloudfairy.dev/env-injectable
  to:
    - cloudfairy.dev/with-service
    - cloudfairy.dev/with-user-and-password
  vendor: cloudfairy
  displayName: Service/Application to module with User and Password
  dependecies: []
  interace: []
  validation: []
  output:
    - name: "{{ properties.env_user }}"
      value: "{{ dependency.to_module.user }}"
    - name: "{{ properties.env_password }}"
      value: "{{ dependency.to_module.password }}"
  properties:
    - name: env_user
      displayName: "Evironment variable for Database user"
      type: string
      defaultValue: "DB_USER"
    - name: env_password
      displayName: "Evironment variable for Database password"
      type: string
      defaultValue: "DB_PASS"